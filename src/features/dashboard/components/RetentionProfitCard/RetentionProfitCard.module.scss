@import "../../../../styles/design-system.scss";
@import "../../../../styles/mixins.scss";


.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: $spacing-xl;
  padding: 0;
  flex-wrap: wrap;
  gap: $spacing-md;

  @include breakpoint-down(sm) {
    flex-direction: column;
    align-items: flex-start;
    gap: $spacing-lg;
  }

  @include breakpoint-down(md) {
    margin-bottom: $spacing-lg;
  }
}

.title {
  font-size: $font-size-md;
  font-weight: $font-weight-semibold;
  color: $color-text-primary;
  margin: 0;
  font-family: $font-family;

  @include breakpoint-down(sm) {
    font-size: $font-size-lg;
  }
}

.actions {
  display: flex;
  align-items: center;
  gap: $spacing-lg;

  @include breakpoint-down(sm) {
    gap: $spacing-md;
    width: 100%;
    justify-content: space-between;
  }
}

.monthSelector {
  position: relative;

  @include breakpoint-down(sm) {
    width: 45%;
  }
}

.monthButton {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: $spacing-sm;
  background-color: transparent;
  padding: $spacing-sm $spacing-md;
  border-radius: $radius-full;
  font-size: $font-size-base;
  color: $color-text-secondary;
  font-family: $font-family;
  border: 1px solid $color-border;
  min-height: 44px;
  white-space: nowrap;

  @include breakpoint-down(sm) {
    width: 100%;
    padding: $spacing-sm;
    justify-content: center;
    gap: 0;
  }

  svg {
    margin-left: $spacing-sm;
    color: $color-text-tertiary;
    flex-shrink: 0;

    @include breakpoint-down(sm) {
      display: none;
    }
  }

  &:hover {
    background-color: rgba($color-text-tertiary, 0.05);
  }
}

.circle {
  border: none;
  outline: none;
  fill: $color-bg;
  background-color: $color-accent;
  border-radius: $radius-full;
}

.downloadButton {
  background-color: $color-text-tertiary;
  color: $color-text-inverse;
  border: none;
  border-radius: $radius-full;
  padding: $spacing-sm $spacing-lg;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  font-family: $font-family;
  transition: $transition-fast;
  cursor: pointer;
  min-height: 44px;
  white-space: nowrap;

  @include breakpoint-down(sm) {
    padding: $spacing-md $spacing-lg;
    font-size: $font-size-sm;
    width: 45%;
    padding: $spacing-sm;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &:hover {
    background-color: darken($color-text-tertiary, 8%);
  }
}

.statsContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  padding: 0;
  gap: $spacing-lg;
  align-items: stretch;
  min-height: fit-content;

  // Large screens: all 5 items in one row
  @include breakpoint-up(lg) {
    flex-wrap: nowrap;
    gap: $spacing-lg;
  }

  // Medium screens: max 2 items per row
  @include breakpoint-between(md, lg) {
    gap: $spacing-md;
    justify-content: flex-start;
    align-content: flex-start;
  }

  // Small screens: max 2 items per row (above sm breakpoint)
  @include breakpoint-between(sm, md) {
    gap: $spacing-md;
    justify-content: flex-start;
    align-content: flex-start;
  }

  // Very small screens: stack vertically
  @include breakpoint-down(sm) {
    gap: $spacing-sm;
    flex-direction: column;
  }
}

.statItem {
  flex: 1;
  min-width: 140px; // Increased from 110px to accommodate larger numbers

  // Large screens: equal width items
  @include breakpoint-up(lg) {
    min-width: 0;
    flex: 1 1 auto; // All items equal width, including last item
  }

  // Medium screens: 2 items per row, 5th item gets full width on its own row
  @include breakpoint-between(md, lg) {
    flex: 1 1 calc(50% - #{$spacing-md / 2});
    max-width: calc(50% - #{$spacing-md / 2});
    min-width: 120px;

    // Last item gets special treatment - full width and larger styling
    &:last-child {
      flex: 1 1 100%;
      max-width: 100%;

      .statInner {
        padding: $spacing-lg $spacing-xl; // More padding for emphasis
        min-height: 140px; // Slightly taller
      }

      .statValue {
        font-size: $font-size-2xl; // Larger value text
      }

      .statLabel {
        font-size: $font-size-sm; // Slightly larger label
      }
    }
  }

  // Small to medium screens: 2 items per row, 5th item gets full width
  @include breakpoint-between(sm, md) {
    flex: 1 1 calc(50% - #{$spacing-md / 2});
    max-width: calc(50% - #{$spacing-md / 2});
    min-width: 120px;

    // Last item gets special treatment - full width and larger styling
    &:last-child {
      flex: 1 1 100%;
      max-width: 100%;

      .statInner {
        padding: $spacing-lg $spacing-xl; // More padding for emphasis
        min-height: 140px; // Slightly taller
      }

      .statValue {
        font-size: $font-size-2xl; // Larger value text
      }

      .statLabel {
        font-size: $font-size-sm; // Slightly larger label
      }
    }
  }

  // Very small screens: all items stacked vertically on separate rows
  @include breakpoint-down(sm) {
    flex: 1 1 100%;
    max-width: 100%;
    min-width: 100%;

    // Last item gets subtle emphasis even on small screens
    &:last-child {
      flex: 1 1 100%;
      max-width: 100%;
      .statInner {
        padding: $spacing-xl $spacing-lg; // More padding
        min-height: 110px; // Slightly taller
      }

      .statValue {
        font-size: $font-size-2xl; // Larger value text
      }
    }
  }
}

.statInner {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: $spacing-lg $spacing-md;
  text-align: center;
  background-color: $color-bg;
  border-radius: $radius-lg;
  box-shadow: $shadow-sm;
  height: 100%;
  border: $border-width $border-style $color-border;
  min-height: 120px; // Ensure consistent height
  box-sizing: border-box; // Include padding and border in height calculation

  @include breakpoint-between(md, lg) {
    padding: $spacing-md $spacing-sm;
    min-height: 130px; // Slightly taller for medium screens to accommodate content
  }

  @include breakpoint-down(md) {
    padding: $spacing-md $spacing-sm;
    min-height: 130px; // Slightly taller for small screens to accommodate content
  }

  @include breakpoint-down(sm) {
    padding: $spacing-lg $spacing-md;
    min-height: 100px;
  }
}

.statLabel {
  font-size: $font-size-xs;
  font-weight: $font-weight-semibold;
  color: $color-text-tertiary;
  margin-bottom: $spacing-sm;
  letter-spacing: $letter-spacing-wide;
  text-transform: uppercase;
  font-family: $font-family;
  line-height: 1.2;

  @include breakpoint-down(md) {
    font-size: 10px;
    margin-bottom: $spacing-xs;
  }
}

.statValue {
  font-size: $font-size-xl;
  font-weight: $font-weight-bold;
  color: $color-text-primary;
  margin-bottom: $spacing-sm;
  font-family: $font-family;
  line-height: 1.1;
  word-break: break-word; // Prevent overflow of long numbers

  @include breakpoint-down(md) {
    font-size: $font-size-lg;
    margin-bottom: $spacing-xs;
  }

  @include breakpoint-down(sm) {
    font-size: $font-size-xl;
  }
}

.statTrend {
  font-size: $font-size-sm;
  padding: $spacing-xs $spacing-sm;
  border-radius: $radius-md;
  font-weight: $font-weight-medium;
  display: inline-block;
  font-family: $font-family;

  &.positive {
    color: $color-success;
    background-color: $color-success-bg;
  }

  &.negative {
    color: $color-error;
    background-color: $color-error-bg;
  }
}
